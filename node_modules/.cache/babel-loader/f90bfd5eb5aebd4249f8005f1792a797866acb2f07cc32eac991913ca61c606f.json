{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\Downloads\\\\resume-fraud-detection-1\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Check if user is logged in (e.g., check localStorage or token)\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n      // You can also fetch user data here if needed\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      // Make API call to login\n      // const response = await axios.post('/api/login', credentials);\n      // For now, we'll just simulate a successful login\n      localStorage.setItem('authToken', 'dummy-token');\n      setIsAuthenticated(true);\n      setUser({\n        name: credentials.email\n      }); // Replace with actual user data\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Make API call to signup\n      // const response = await axios.post('/api/signup', userData);\n      // For now, we'll just simulate a successful signup\n      localStorage.setItem('authToken', 'dummy-token');\n      setIsAuthenticated(true);\n      setUser({\n        name: userData.email\n      }); // Replace with actual user data\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","token","localStorage","getItem","login","credentials","setItem","name","email","success","error","console","message","signup","userData","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/vishn/Downloads/resume-fraud-detection-1/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in (e.g., check localStorage or token)\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      // You can also fetch user data here if needed\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      // Make API call to login\r\n      // const response = await axios.post('/api/login', credentials);\r\n      // For now, we'll just simulate a successful login\r\n      localStorage.setItem('authToken', 'dummy-token');\r\n      setIsAuthenticated(true);\r\n      setUser({ name: credentials.email }); // Replace with actual user data\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      // Make API call to signup\r\n      // const response = await axios.post('/api/signup', userData);\r\n      // For now, we'll just simulate a successful signup\r\n      localStorage.setItem('authToken', 'dummy-token');\r\n      setIsAuthenticated(true);\r\n      setUser({ name: userData.email }); // Replace with actual user data\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, signup, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACTH,kBAAkB,CAAC,IAAI,CAAC;MACxB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF;MACA;MACA;MACAH,YAAY,CAACI,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC;MAChDR,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAAC;QAAEO,IAAI,EAAEF,WAAW,CAACG;MAAM,CAAC,CAAC,CAAC,CAAC;MACtC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACF;MACA;MACA;MACAZ,YAAY,CAACI,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC;MAChDR,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAAC;QAAEO,IAAI,EAAEO,QAAQ,CAACN;MAAM,CAAC,CAAC,CAAC,CAAC;MACnC,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACE;MAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBb,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC;IACpClB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,eAAe;MAAEE,IAAI;MAAEK,KAAK;MAAES,MAAM;MAAEE;IAAO,CAAE;IAAApB,QAAA,EAC3EA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CAtDWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAwDzB,OAAO,MAAM8B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACiC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAQpB,eAAe/B,WAAW;AAAC,IAAA8B,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}